---

- name: Query existing script object
  community.routeros.api:
    path: system script
    query: ".id name source WHERE name == {{ _ms_install_script.name }}"
  register: __ms_existing_script

- name: Get existing script content
  ansible.builtin.set_fact:
    _ms_existing_script_content: |
      {{ __ms_existing_script.msg[0].source if __ms_existing_script.msg[0].source is defined else false }}

- name: Download script content
  community.routeros.api:
    path: tool
    cmd: >-
      fetch mode=https
      url={{
        'https://raw.githubusercontent.com/cheretbe/mikrotik-scripts/' ~ 
        (ms_install_branch | default('master')) ~ 
        '/' ~ ms_install_script_name ~ '/' ~ _ms_install_script.source | community.routeros.quote_argument_value
      }}
      as-value=yes output=user
  when: _ms_install_script.source is defined
  register:
    __ms_downloaded_script_content

- name: Set downloaded script content
  ansible.builtin.set_fact:
    _ms_script_content: "{{ __ms_downloaded_script_content.msg | json_query(_ms_content_selection_query) }}"
  vars:
    _ms_content_selection_query: "[?status=='finished'].data|[0]"
  when: _ms_install_script.source is defined

- name: Directly set script content
  ansible.builtin.set_fact:
    _ms_script_content: "{{ _ms_install_script.content }}"
  when: _ms_install_script.content is defined

- name: Create script object
  community.routeros.api:
    path: system script
    cmd: >-
      add name={{ _ms_install_script.name }} source=""
  when: not _ms_existing_script_content

- name: Set script content
  community.routeros.api_find_and_modify:
    path: system script
    find:
      name: "{{ _ms_install_script.name }}"
    values:
      source: "{{ _ms_script_content }}"
  when: |
    ((not _ms_existing_script_content) or _ms_install_script.overwrite) and
    (_ms_existing_script_content != _ms_script_content)
